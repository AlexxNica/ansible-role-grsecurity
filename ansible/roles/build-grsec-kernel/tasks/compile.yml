---
- name: extract linux tarball
  command: tar -xf linux-{{ linux_kernel_version }}.tar
  args:
    chdir: "{{ download_directory }}"
    creates: "{{ linux_source_directory }}"

- name: apply grsecurity patch
  shell: patch -p1 < ../{{ grsecurity_patch.filename }}
  args:
    chdir: "{{ linux_source_directory }}"

- name: put kernel config
  template:
    src: config-{{ target_os }}
    dest: "{{ linux_source_directory }}/.config"

- name: get number of CPUs
  shell: grep -c '^processor' /proc/cpuinfo
  register: num_cpus

- name: clean kernel source tree
  shell: cd {{ linux_source_directory }} && make-kpkg clean

- name: build the kernel for debian
  shell: cd {{ linux_source_directory }} && make-kpkg --initrd kernel_image
  environment:
    CONCURRENCY_LEVEL: "{{ num_cpus.stdout }}"
  when: target_os == 'debian'

- name: build the kernel for ubuntu
  shell: cd {{ linux_source_directory }} && make-kpkg --initrd --overlay-dir=../ubuntu-package kernel_image
  environment:
    CONCURRENCY_LEVEL: "{{ num_cpus.stdout }}"
  when: target_os == 'ubuntu'
